// <auto-generated />
using BackEndEleccions.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEleccionsM.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241103175353_OneMig")]
    partial class OneMig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackEleccionsM.Models.Candidat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("NomCandidat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartitPoliticId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PartitPoliticId");

                    b.ToTable("Candidats");
                });

            modelBuilder.Entity("BackEleccionsM.Models.Municipi", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("NomMunicipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroRegidors")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Municipis");
                });

            modelBuilder.Entity("BackEleccionsM.Models.PartitPolitic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("MunicipiId")
                        .HasColumnType("int");

                    b.Property<string>("NomPartit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MunicipiId");

                    b.ToTable("PartitsPolitics");
                });

            modelBuilder.Entity("BackEleccionsM.Models.ResultatsTaula", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("TaulaElectoralId")
                        .HasColumnType("int");

                    b.Property<int>("VotsBlanc")
                        .HasColumnType("int");

                    b.Property<int>("VotsNul")
                        .HasColumnType("int");

                    b.Property<int>("VotsTotals")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TaulaElectoralId")
                        .IsUnique();

                    b.ToTable("ResultatsTaules");
                });

            modelBuilder.Entity("BackEleccionsM.Models.TaulaElectoral", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CensTaula")
                        .HasColumnType("int");

                    b.Property<int>("MunicipiId")
                        .HasColumnType("int");

                    b.Property<string>("NomTaula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MunicipiId");

                    b.ToTable("TaulesElectorals");
                });

            modelBuilder.Entity("BackEleccionsM.Models.VotsPerPartit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("NumeroVotsLlista")
                        .HasColumnType("int");

                    b.Property<int>("PartitId")
                        .HasColumnType("int");

                    b.Property<int>("ResultatsTaulaId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PartitId");

                    b.HasIndex("ResultatsTaulaId");

                    b.ToTable("VotsPerPartit");
                });

            modelBuilder.Entity("BackEleccionsM.Models.Candidat", b =>
                {
                    b.HasOne("BackEleccionsM.Models.PartitPolitic", "PartitPolitic")
                        .WithMany("Candidats")
                        .HasForeignKey("PartitPoliticId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartitPolitic");
                });

            modelBuilder.Entity("BackEleccionsM.Models.PartitPolitic", b =>
                {
                    b.HasOne("BackEleccionsM.Models.Municipi", "Municipi")
                        .WithMany("LlistaPartits")
                        .HasForeignKey("MunicipiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipi");
                });

            modelBuilder.Entity("BackEleccionsM.Models.ResultatsTaula", b =>
                {
                    b.HasOne("BackEleccionsM.Models.TaulaElectoral", null)
                        .WithOne("ResultatsTaula")
                        .HasForeignKey("BackEleccionsM.Models.ResultatsTaula", "TaulaElectoralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BackEleccionsM.Models.TaulaElectoral", b =>
                {
                    b.HasOne("BackEleccionsM.Models.Municipi", "Municipi")
                        .WithMany("TaulesElectorals")
                        .HasForeignKey("MunicipiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipi");
                });

            modelBuilder.Entity("BackEleccionsM.Models.VotsPerPartit", b =>
                {
                    b.HasOne("BackEleccionsM.Models.PartitPolitic", "Partit")
                        .WithMany("Vots")
                        .HasForeignKey("PartitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BackEleccionsM.Models.ResultatsTaula", "ResultatsTaula")
                        .WithMany("VotsPartit")
                        .HasForeignKey("ResultatsTaulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partit");

                    b.Navigation("ResultatsTaula");
                });

            modelBuilder.Entity("BackEleccionsM.Models.Municipi", b =>
                {
                    b.Navigation("LlistaPartits");

                    b.Navigation("TaulesElectorals");
                });

            modelBuilder.Entity("BackEleccionsM.Models.PartitPolitic", b =>
                {
                    b.Navigation("Candidats");

                    b.Navigation("Vots");
                });

            modelBuilder.Entity("BackEleccionsM.Models.ResultatsTaula", b =>
                {
                    b.Navigation("VotsPartit");
                });

            modelBuilder.Entity("BackEleccionsM.Models.TaulaElectoral", b =>
                {
                    b.Navigation("ResultatsTaula")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
